const correctSound = document.getElementById("correct-sound");
const gameOverSound = document.getElementById("game-over-sound");
const wordContainer = document.getElementById("word-container");
const inputBox = document.getElementById("input-box");
const scoreDisplay = document.getElementById("score");
const timeDisplay = document.getElementById("time");
const gameOverModal = document.getElementById("game-over-modal");
const totalWordsDisplay = document.getElementById("total-words");
const finalScoreDisplay = document.getElementById("final-score");
const restartBtn = document.getElementById("restart-btn");
const backToMenuButton = document.getElementById("backToMenuButton");

let selectedDifficulty = "";
let selectedCategory = "";
let timer = 0;
let words = [];
let currentWordIndex = 0;
let currentWord = "";
let timerInterval = null;

const wordBanks = {
  science: [
    "Conductor", "Cohesion", "Compounds", "Diffusion", "Breathing", "Cometary", "Biology"
  ],
  computer: [
    "Updater", "Datacenter", "Drive", "Operating", "Loader"
  ],
  technology: [
    "Compress", "Mounting", "Gaskets", "Filters", "Sensors"
  ]
};

const sentenceBanks = {
  science: [
    "Atoms are composed of protons, neutrons, and electrons.",
    "The DNA molecule carries the genetic blueprint for all living organisms.",
    "Water is a universal solvent due to its polar molecular structure.",
    "Photosynthesis converts sunlight into chemical energy for plants.",
    "Black holes have gravitational forces so strong that even light cannot escape.",
    "The periodic table organizes elements by their atomic number and properties.",
    "Newton’s three laws of motion describe the relationship between forces and motion.",
    "The Milky Way galaxy contains over 100 billion stars.",
    "Fossils provide evidence of evolution over millions of years.",
    "Quantum mechanics describes the behavior of particles at atomic and subatomic levels.",
    "The Big Bang theory explains the origin of the universe approximately 13.8 billion years ago.",
    "An ecosystem is a community of interacting organisms and their environment.",
    "Antibiotics are used to fight bacterial infections but not viruses.",
    "Plate tectonics explain the movement of Earth’s lithospheric plates.",
    "Superconductors can conduct electricity without resistance at low temperatures.",
    "The human brain contains approximately 86 billion neurons.",
    "Light behaves both as a particle and a wave, known as wave-particle duality.",
    "Radioactivity involves the decay of unstable atomic nuclei.",
    "Gravity is the force that attracts two bodies toward each other.",
    "The ozone layer protects Earth from harmful ultraviolet radiation.",
    "Genetic mutations can lead to evolutionary advantages or diseases.",
    "Artificial intelligence mimics human cognitive processes like learning and problem-solving.",
    "Nanotechnology involves the manipulation of matter at the atomic scale.",
    "Solar panels convert sunlight into electricity using photovoltaic cells.",
    "The Doppler effect describes the change in frequency of a wave relative to an observer.",
    "Earth’s magnetic field is generated by movements in its molten outer core.",
    "CRISPR is a revolutionary gene-editing technology.",
    "Viruses are not considered living organisms because they cannot reproduce on their own.",
    "The Doppler effect describes the change in frequency of a wave relative to an observer.",
    "Earth's magnetic field is generated by movements in its molten outer core",
    "Sound travels faster in solids than in liquids and gases."
  ],
  computer: [
    "A byte consists of 8 bits, and a bit is the smallest unit of data in a computer.",
    "The CPU (Central Processing Unit) is often referred to as the brain of the computer.",
    "RAM (Random Access Memory) is used by the computer to store data temporarily while it's in use.",
    "The operating system manages hardware and software resources on a computer.",
    "Cloud computing allows data and services to be stored and accessed over the internet.",
    "A hard drive (HDD) stores data on magnetic disks, while SSDs (Solid-State Drives) use flash memory.",
    "HTML (HyperText Markup Language) is the standard language for creating web pages.",
    "CSS (Cascading Style Sheets) is used to style the visual presentation of web pages.",
    "JavaScript is a programming language that enables interactive features on websites.",
    "Python is known for its simplicity and readability, making it popular among beginners.",
    "Java is a widely-used, object-oriented programming language for building platform-independent applications.",
    "Linux is an open-source operating system used for its stability and security in servers and desktops.",
    "An IP address uniquely identifies a device connected to a network.",
    "HTTP (HyperText Transfer Protocol) is the foundation of data communication on the World Wide Web.",
    "A router directs data packets between devices on a network or between networks.",
    "A firewall monitors and controls incoming and outgoing network traffic based on security rules.",
    "Machine learning is a branch of AI that allows computers to learn from data and improve over time.",
    "Encryption converts data into a code to prevent unauthorized access.",
    "An algorithm is a set of instructions for solving a problem or performing a task.",
    "A database is an organized collection of data, usually stored and accessed electronically.",
    "A compiler translates high-level programming code into machine-readable code.",
    "Version control systems, like Git, help track changes in code during development.",
    "Artificial intelligence (AI) aims to create machines that can perform tasks that typically require human intelligence.",
    "The Internet of Things (IoT) refers to everyday objects that connect to the internet for data exchange.",
    "A virtual machine (VM) allows you to run an operating system within another operating system.",
    "A browser is software used to access and navigate the World Wide Web.",
    "Malware is software designed to disrupt, damage, or gain unauthorized access to computer systems.",
    "A VPN (Virtual Private Network) provides a secure connection over the internet.",
    "A chipset controls communication between the CPU and other components of the computer.",
    "Blockchain is a decentralized digital ledger technology used for secure transactions.",
    "A GPU (Graphics Processing Unit) is responsible for rendering images and videos in a computer.",
    "The BIOS (Basic Input/Output System) initializes hardware during the booting process.",
    "Augmented reality (AR) overlays digital content in the real world through devices like smartphones or AR glasses.",
    "Deep learning is a subset of machine learning that uses neural networks to analyze vast amounts of data.",
    "SQL (Structured Query Language) is used to manage and manipulate databases."
  ],
  technology: [
    "Artificial Intelligence (AI) enables machines to simulate human intelligence and decision-making.",
    "Blockchain technology ensures secure, transparent, and tamper-proof transactions across networks.",
    "The Internet of Things (IoT) connects everyday objects to the internet to collect and exchange data.",
    "5G is the fifth generation of mobile networks, offering faster speeds and lower latency compared to 4G.",
    "Quantum computing leverages quantum mechanics to process information exponentially faster than classical computers.",
    "Virtual Reality (VR) immerses users in a computer-generated environment for a fully interactive experience.",
    "Augmented Reality (AR) overlays digital information onto the real world using devices like smartphones or AR glasses.",
    "Cloud computing allows users to store and access data and applications over the internet instead of locally.",
    "Self-driving cars use sensors, cameras, and AI to navigate and operate without human intervention.",
    "Edge computing processes data closer to the source of data generation, reducing latency and improving speed.",
    "Wearable technology, such as smartwatches, integrates technology into clothing or accessories for health and productivity.",
    "3D printing allows the creation of three-dimensional objects by layering material based on digital designs.",
    "Big Data refers to large and complex data sets that require advanced tools to analyze and extract meaningful insights.",
    "Cybersecurity protects systems, networks, and data from unauthorized access, attacks, or damage.",
    "Cryptocurrency is a digital or virtual currency that uses cryptography for secure transactions.",
    "Drones are unmanned aerial vehicles that can be controlled remotely or autonomously for various purposes.",
    "Robotics involves the design and operation of robots to perform tasks traditionally done by humans.",
    "Biotechnology applies biological organisms or systems to develop new technologies and products in fields like medicine and agriculture.",
    "The gig economy is a labor market characterized by short-term, flexible, and freelance jobs facilitated by digital platforms.",
    "Smart homes integrate technology to control household devices and systems, improving convenience and energy efficiency.",
    "Nanotechnology manipulates matter at the atomic or molecular scale to create innovative materials and devices.",
    "Voice assistants, like Alexa and Siri, use natural language processing (NLP) to perform tasks based on voice commands.",
    "Autonomous systems operate independently with minimal human intervention, using sensors and algorithms for decision-making.",
    "Biometric authentication uses physical characteristics, such as fingerprints or facial recognition, for security purposes.",
    "Electric vehicles (EVs) run on electric power rather than traditional fuels, reducing emissions and environmental impact.",
    "Augmented analytics leverages AI and machine learning to automate data analysis and insights generation.",
    "Chatbots simulate human conversation using AI to assist with customer service or provide information.",
    "Smart grids use digital technology to manage and distribute electricity more efficiently, optimizing energy use.",
    "Digital twins are virtual models of physical objects or systems used to simulate performance and predict outcomes.",
    "The sharing economy is based on the peer-to-peer sharing of goods and services facilitated by digital platforms.",
    "Precision medicine uses genetic information to tailor medical treatments to individual patients' needs.",
    "Wearable fitness trackers monitor physical activity, health metrics, and provide insights into users’ well-being.",
    "Smart cities use data and digital technologies to improve urban living, reduce waste, and enhance sustainability.",
    "Speech recognition converts spoken language into text or commands, enabling voice-controlled applications.",
    "The metaverse is a collective virtual shared space that integrates augmented reality, virtual reality, and the internet.",
    "Digital currencies and blockchain technology are transforming financial systems and decentralized transactions."
  ]
};

const sentenceTimers = {
  easy: 260,
  medium: 200,
  difficult: 130
}

function initializeGame() {
  if (mode === "sentence") {
    words = sentenceBanks[selectedCategory];
  } else {
    words = wordBanks[selectedCategory];
  }

  currentWordIndex = 0;
  score = 0;
  timer = calculateInitialTime(selectedDifficulty);
  currentWord = words[currentWordIndex];
  updateUI();
}

inputBox.addEventListener("input", () => {
  const inputText = inputBox.value.trim();

  if (mode === "sentence") {
    if (inputText === currentWord) {
      correctInput();
    }
  } else {
    // For word mode
    if (inputText.toLowerCase() === currentWord.toLowerCase()) {
      correctInput();
    }
  }
});

function correctInput() {
  correctSound.play();
  score++; // Increment score
  scoreDisplay.textContent = score; // Update score on screen
  inputBox.value = ""; // Clear input box
  currentWordIndex++; // Move to the next word/sentence
  if (currentWordIndex < words.length) {
    if (mode === "sentence") {
      displaySentence(); // Update for sentence mode
    } else {
      displayWord(); // Update for word mode
    }
  } else {
    endGame(); // End the game if all words are completed
  }
}
function calculateInitialTime(difficulty, mode) {
  let time = 0;

  if (mode === 'words') {
    // Time limits for Words Mode
    switch (difficulty) {
      case 'easy':
        time = 100; // 100 seconds for Easy
        break;
      case 'medium':
        time = 80; // 80 seconds for Medium
        break;
      case 'hard':
        time = 50; // 50 seconds for Hard
        break;
      default:
        console.error("Invalid difficulty level for Words Mode");
    }
  } else if (mode === 'sentence') {
    // Time limits for Sentence Mode
    switch (difficulty) {
      case 'easy':
        time = 260; // 260 seconds for Easy
        break;
      case 'medium':
        time = 200; // 200 seconds for Medium
        break;
      case 'hard':
        time = 130; // 130 seconds for Hard
        break;
      default:
        console.error("Invalid difficulty level for Sentence Mode");
    }
  } else {
    console.error("Invalid mode. Please use 'words' or 'sentence'.");
  }

  return time;
}

document.querySelectorAll(".mode-select").forEach((btn) =>
  btn.addEventListener("click", (e) => {
    mode = e.target.dataset.mode;
  })
);

document.querySelectorAll(".difficulty-select").forEach((btn) =>
  btn.addEventListener("click", (e) => {
    selectedDifficulty = e.target.dataset.difficulty;
  })
);

let inputType = "word";
let sentences = [];
let currentSentence = "";

console.log(window.location.href);

function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]]; // Swap elements
  }
}

function updateDifficultyOptions(inputType) {
  const difficultySection = document.getElementById("difficult-section");
  const difficultyOptions = difficultySection.querySelectorAll("option");

  if (inputType === "sentence") {
    // update options
    difficultyOptions[0].textcontent = "Easy (4 min 20sec)"
    difficultyOptions[1].textContent = "Medium (3min 20sec)"
    difficultyOptions[2].textContent = "Difficult (2min 10sec)"
  } else {
    // reset options for words
    difficultyOptions[0].textcontent = "Easy (4 letter words)"
    difficultyOptions[1].textcontent = "Easy (6 letter words)"
    difficultyOptions[2].textcontent = "Easy (5-8 ltter words)"
  }
}

function setupGame() {
  console.log("Setting up game...");

  if (inputType === "word") {
    switch (selectedDifficulty) {
      case "easy":
        timer = 100;
        words = wordBanks[selectedCategory].filter(word => word.length === 4);
        break;
      case "medium":
        timer = 80;
        words = wordBanks[selectedCategory].filter(word => word.length === 6);
        break;
      case "difficult":
        timer = 50;
        words = wordBanks[selectedCategory].filter(word => word.length >= 6 && word.length <= 8);
        break;
      default:
        console.error("Invalid difficulty or category.");
        return;
    }
    shuffleArray(words);
  } else if (inputType === "sentence") {
    timer = sentenceTimers[selectedDifficulty];
    sentences = sentenceBanks[selectedCategory].slice(); // Create a COPY
    shuffleArray(sentences);
    currentSentence = sentences[0];
  }

  currentWordIndex = 0; // Reset word index
  score = 0; // Reset score
  scoreDisplay.textContent = score;
  timeDisplay.textContent = timer; // Display initial timer
}

function displayWord() {
  if (currentWordIndex < words.length) {
    currentWord = words[currentWordIndex];
    wordContainer.innerHTML = "";
    currentWord.split("").forEach(letter => {
      const letterSpan = document.createElement("span");
      letterSpan.className = "letter";
      letterSpan.textContent = letter;
      wordContainer.appendChild(letterSpan);
    });
  } else {
    endGame(); // Correctly end game when all words are done
  }
}

function displaySentence() {
  if (currentWordIndex < sentences.length) {
    currentSentence = sentences[currentWordIndex];
    wordContainer.innerHTML = "";
    currentSentence.split("").forEach((char) => {
      const charSpan = document.createElement("span");
      charSpan.className = "sentence-letter";
      charSpan.textContent = char;
      wordContainer.appendChild(charSpan);
    });
  } else {
    endGame();
  }
}

// Add an event listener for input tracking
inputBox.addEventListener("input", () => {
  const inputText = inputBox.value;
  const letters = document.querySelectorAll("#word-container .letter");

  letters.forEach((letterSpan, index) => {
    if (index < inputText.length) {
      const typedChar = inputText[index];

      if (typedChar === letterSpan.textContent) {
        letterSpan.classList.add("correct");
        letterSpan.classList.remove("incorrect");
      } else {
        letterSpan.classList.add("incorrect");
        letterSpan.classList.remove("correct");
      }
    } else {
      // Reset styles for untouched letters
      letterSpan.classList.remove("correct", "incorrect");
    }
  });

  // Check if the entire sentence is completed

}
);

function startGame() {
  gameEnded = false; // Reset gameEnded flag (optional, but recommended)
  inputBox.disabled = false;

  if (!selectedDifficulty || !selectedCategory) {
    console.error("Game setup is incomplete.");
    return;
  }

  setupGame();
  inputBox.value = "";

  if (inputType === "word") {
    displayWord();
    inputBox.removeEventListener("input", handleSentenceInput);
    inputBox.addEventListener("input", handleInput);
  } else if (inputType === "sentence") {
    displaySentence();
    inputBox.removeEventListener("input", handleInput);
    inputBox.addEventListener("input", handleSentenceInput);
  }

  clearInterval(timerInterval);
  timerInterval = setInterval(() => {
    if (!gameEnded) {
      timer--;
      timeDisplay.textContent = timer;

      if (timer <= 0) {
        endGame();
      }
    }
  }, 1000);

  if (inputType === "word") {
    inputBox.removeEventListener("input", handleSentenceInput);
    inputBox.addEventListener("input", handleInput);
  } else if (inputType === "sentence") {
    inputBox.removeEventListener("input", handleInput);
    inputBox.addEventListener("input", handleSentenceInput);
  }
}

function endGame() {
  if (!gameEnded) {
    gameEnded = true;
    console.log("Game Over...");
    clearInterval(timerInterval);
    inputBox.disabled = true;
    gameOverSound.play();

    const totalWordsElement = document.getElementById("total-words");
    const finalMessageElement = document.getElementById("final-message"); // Get the message element

    if (inputType === "word") {
      totalWordsElement.textContent = score;
      finalMessageElement.innerHTML = `You typed <span id="total-words">${score}</span> words correctly!`;
    } else if (inputType === "sentence") {
      totalWordsElement.textContent = score;
      finalMessageElement.innerHTML = `You typed <span id="total-words">${score}</span> sentences correctly!`;
    }

    finalScoreDisplay.textContent = score; // Keep this for overall score display
    gameOverModal.style.display = "flex";
  }
}

function resetGame() {
  gameOverModal.style.display = "none";
  setupGame();
  startGame();
  const inputBox = document.getElementById('input-box');
  inputBox.value = ''; // Clear input
  inputBox.focus();
}

function handleInput() {
  if (gameEnded) return;

  const typedText = inputBox.value.trim().toLowerCase();
  const currentWordLower = currentWord.toLowerCase();
  const wordLetters = document.querySelectorAll(".letter");

  wordLetters.forEach((letterSpan, index) => {
    const typedChar = typedText[index];
    if (typedChar === undefined) {
      letterSpan.className = "letter";
    } else if (typedChar === letterSpan.textContent.toLowerCase()) {
      letterSpan.className = "letter correct";
    } else {
      letterSpan.className = "letter incorrect";
    }
  });

  if (typedText === currentWordLower) {
    score++;
    scoreDisplay.textContent = score;
    correctSound.play();
    inputBox.value = "";
    currentWordIndex++;

    if (currentWordIndex < words.length) {
      displayWord();
    } else {
      endGame(); // Correctly end the game after the last word
    }
  }
}

function handleSentenceInput() {
  if (gameEnded) return;

  const input = inputBox.value;
  const sentenceLetters = document.querySelectorAll(".sentence-letter");

  sentenceLetters.forEach((letterSpan, index) => {
    const typedChar = input[index];

    if (typedChar === undefined) {
      letterSpan.classList.remove("correct", "incorrect");
    } else if (typedChar === letterSpan.textContent) {
      letterSpan.classList.add("correct");
      letterSpan.classList.remove("incorrect");
    } else {
      letterSpan.classList.add("incorrect");
      letterSpan.classList.remove("correct");
    }
  });

  if (input.trim() === currentSentence) {
    correctSound.play();
    inputBox.value = "";
    currentWordIndex++;
    score++; //Increment Score Here
    scoreDisplay.textContent = score;

    if (currentWordIndex < sentences.length) {
      displaySentence();
    } else {
      endGame();
    }
  }
}

restartBtn.addEventListener("click", () => {
  resetGame();
  document.getElementById('input-box').disabled = false;
});

backToMenuButton.addEventListener("click", () => {
  console.log("Navigating back to menu...");

  // Hide game over modal
  gameOverModal.style.display = "none";

  // Reset inline styles or states
  document.body.style.margin = "0";
  document.body.style.padding = "0";
  document.body.style.position = "relative";

  // Navigate to homepage
  window.location.href = "/";

  // Reset game state
  clearInterval(timerInterval);
  timer = 0;
  words = [];
  currentWordIndex = 0;
  score = 0;
  currentWord = "";
  inputBox.value = "";
  inputBox.disabled = true;
  wordContainer.innerHTML = "";
  scoreDisplay.textContent = "0";
  timeDisplay.textContent = "0";

  // Navigate to the homepage
  const homepage = document.getElementById("homepage"); // Example selector
  const gamepage = document.getElementById("gamepage"); // Example selector

  homepage.style.display = "block"; // Show the homepage
  gamepage.style.display = "none"; // Hide the game page

  // Remove focus from the input box to prevent unwanted scroll
  inputBox.blur();

  // Explicitly set focus on the homepage or another non-scrolling element
  homepage.focus();

  // Optionally reset scroll position
  homepage.scrollTop = 0;
});

function resetGameVariables() {
  selectedDifficulty = "";
  selectedCategory = "";
  timer = 0;
  words = [];
  currentWordIndex = 0;
  score = 0;
  currentWord = "";
  timerInterval = null;

  // Reset UI elements
  scoreDisplay.textContent = 0;
  timeDisplay.textContent = 0;
  wordContainer.innerHTML = "";
  inputBox.disabled = false;
}

document.addEventListener("DOMContentLoaded", () => {
  const homepage = document.getElementById("homepage");
  const gamePage = document.getElementById("gamePage");
  const gameForm = document.getElementById("gameForm");
  const inputTypeSelector = document.getElementById("inputType");
  const difficultySelector = document.getElementById("difficulty");

  function updateDifficultyOptions(inputType) {
    if (inputType === "sentence") {
      difficultySelector.innerHTML = `
        <option value="easy">Easy (4 min 20sec)</option>
        <option value="medium">Medium (3min 20sec)</option>
        <option value="difficult">Difficult (2min 10sec)</option>
      `;
    } else if (inputType === "word") {
      difficultySelector.innerHTML = `
        <option value="easy">Easy (4 letter word)</option>
        <option value="medium">Medium (6 letter word)</option>
        <option value="difficult">Difficult (5-8 letter word)</option>
      `;
    }
  }

  // Attach change event listener to the input type dropdown
  inputTypeSelector.addEventListener("change", () => {
    const selectedType = inputTypeSelector.value; // Get the selected input type
    updateDifficultyOptions(selectedType); // Update difficulty options dynamically
  });

  gameForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const playerName = document.getElementById("playerName").value;
    selectedDifficulty = document.getElementById("difficulty").value;
    selectedCategory = document.getElementById("category").value;
    inputType = document.getElementById("inputType").value;

    console.log("Player Name:", playerName);
    console.log("Difficulty:", selectedDifficulty);
    console.log("Category:", selectedCategory);
    console.log("Input Type:", inputType);

    if (inputType === "sentence") {
      sentences = sentenceBanks[selectedCategory];
      shuffleArray(sentences);
      currentSentence = sentences[0];
    } else {
      words = wordBanks[selectedCategory];
      shuffleArray(words);
    }

    homepage.style.display = "none";
    gamePage.style.display = "block";

    setupGame();
    startGame();
  });
});

// Initialize game setup
setupGame();